import matplotlib.pyplot as plt
import numpy as np
import random

def first(array,i,j): 
    ffirsts= []
    firsts = [(i+1,j-1),(i+1,j),(i+1,j+1),(i-1,j-1),(i-1,j),(i-1,j+1),(i,j-1),(i,j+1)]
    for neighbour in firsts:
        if neighbour[0]>=0 and neighbour[0]<100 and neighbour[1]>=0 and neighbour[1]<150:
            ffirsts.append(neighbour)

    for neighbour in ffirsts:
        if random.randint(1,1000)<=80 and array[neighbour[0], neighbour[1]]==0:
          array[neighbour[0], neighbour[1]] = 1        
        
def second(array,i,j):    
    fseconds= []
    seconds = [(i-2,j-2),(i-2,j-1),(i-2,j),(i-2,j+1),(i-2,j+2),(i+2,j-2),(i+2,j-1),(i+2,j),(i+2,j+1),
               (i+2,j+2),(i-1,j-2),(i-1,j+2),(i,j-2),(i,j+2),(i+1,j-2),(i+1,j+2)]
    for neighbour in seconds:
        if neighbour[0]>=0 and neighbour[0]<100 and neighbour[1]>=0 and neighbour[1]<150:
            fseconds.append(neighbour)

    for neighbour in fseconds:
        if random.randint(1,1000)<=250 and array[neighbour[0], neighbour[1]]==0:
          array[neighbour[0], neighbour[1]] = 1       

def swap(a):
    x = []
    y = []
    while len(x) <=15:
        x1 = random.randint(0,99)
        if x1 not in x:
            x.append(x1)
    while len(y) <= 15:
        y1 = random.randint(0,149)
        if y1 not in y:
            y.append(y1)   

    for k in range(8):
      a[x[8+k],y[8+k]],a[x[k],y[k]]=a[x[k],y[k]],a[x[8+k],y[8+k]]
        
main= np.zeros((100, 150),int)             
main[50,75] = 1                                      
howmany1= [0]
howmany1total= [1]
one = []

while howmany1total[-1]!=15000:
    swap(main)
    for i in range(100):
        for j in range(150):
            if main[i,j] == 1:
                one.append((i,j))

    for num in one:
        first(main,num[0],num[1])
        second(main,num[0],num[1])
    howmany1total.append(len(set(one)))
    howmany1.append(howmany1total[-1]-howmany1total[-2])
   
y1 = howmany1total
plt.plot(y1, color='red')
plt.xlabel('No. of iterations')
plt.ylabel('No. of ones in the matrix')
plt.show()

y2 = howmany1
plt.plot(y2, color='b')
plt.xlabel('No. of iterations')
plt.ylabel('Change in number of 1s per iteration')
plt.show()
print("Max no. of 1s added: "+str(max(howmany1)))
